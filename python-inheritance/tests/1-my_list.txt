>>> MyList = __import__('1-my_list').MyList

# Test present: check instantiation
>>> my_list = MyList()
>>> isinstance(my_list, MyList)
True

# Test present: check inherits from list
>>> isinstance(my_list, list)
True

# Test present: check __str__
>>> str(my_list)
'[]'

# Test present: check append()
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> str(my_list)
'[1, 2, 3]'

# Test present: check print_sorted() with sorted append
>>> my_list.print_sorted()
[1, 2, 3]
>>> str(my_list)
'[1, 2, 3]'

# Test present: check print_sorted() with not sorted append
>>> my_list.append(0)
>>> my_list.print_sorted()
[0, 1, 2, 3]
>>> str(my_list)
'[1, 2, 3, 0]'

# Test present: check print_sorted() with no sorted append with negative number
>>> my_list.append(-1)
>>> my_list.print_sorted()
[-1, 0, 1, 2, 3]
>>> str(my_list)
'[1, 2, 3, 0, -1]'

# Test present: check print_sorted() with empty list
>>> empty_list = MyList()
>>> empty_list.print_sorted()
[]

# Correct output - case: class creation
>>> my_list = MyList([5, 2, 4])
>>> str(my_list)
'[5, 2, 4]'

# Correct output - case: class creation and regular print
>>> my_list = MyList([3, 1, 2])
>>> str(my_list)
'[3, 1, 2]'

# Correct output - case: class creation, append and regular print
>>> my_list.append(4)
>>> str(my_list)
'[3, 1, 2, 4]'

# Correct output - case: class creation, append, regular print and sorted print
>>> my_list.print_sorted()
[1, 2, 3, 4]
>>> str(my_list)
'[3, 1, 2, 4]'

# Correct output - case: class creation, multiple appends, regular print and sorted print
>>> my_list.append(0)
>>> my_list.append(7)
>>> str(my_list)
'[3, 1, 2, 4, 0, 7]'
>>> my_list.print_sorted()
[0, 1, 2, 3, 4, 7]
